PREFIX dc: <http://purl.org/dc/elements/1.1/>
PREFIX dcterms: <http://purl.org/dc/terms/>
PREFIX dsv: <http://purl.org/iso25964/DataSet/Versioning#>
PREFIX owl: <http://www.w3.org/2002/07/owl#>
PREFIX sd: <http://www.w3.org/ns/sparql-service-description#>
PREFIX sh: <http://purl.org/skos-history/>
PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
PREFIX xhv: <http://www.w3.org/1999/xhtml/vocab#>
PREFIX zbwext: <http://zbw.eu/namespaces/zbw-extensions/>
#
# show all labels which already existed in the previous version,
# but were moved to another concept in the current one
#
SELECT DISTINCT (str(?label) AS ?movedLabel) ?oldLabelType ?oldConcept (str(?oldPrefLabel) as ?oldConceptLabel) ?isDeprecated
?newLabelType ?newConcept (str(?newPrefLabel) as ?newConceptLabel)
WHERE {
  GRAPH ?versionHistoryGraph {
    # parameters
    VALUES ( ?versionHistoryGraph ?conceptType ?oldVersion ?newVersion ?language ) {
      ( <http://zbw.eu/stw/version> zbwext:Descriptor undef undef "en" )
    }
    # get the current and the previous version as default versions
    ?versionset dsv:currentVersionRecord/xhv:prev/dc:identifier ?previousVersion .
    ?versionset dsv:currentVersionRecord/dc:identifier ?latestVersion .
    # select the versions to actually use
    BIND(coalesce(?oldVersion, ?previousVersion) AS ?oldVersionSelected)
    BIND(coalesce(?newVersion, ?latestVersion) AS ?newVersionSelected)
    # get the delta and via that the relevant graphs
    ?delta a sh:SchemeDelta ;
      sh:deltaFrom/dc:identifier ?oldVersionSelected ;
      sh:deltaTo/dc:identifier ?newVersionSelected ;
      sh:deltaFrom/sh:usingNamedGraph/sd:name ?oldVersionGraph ;
      sh:deltaTo/sh:usingNamedGraph/sd:name ?newVersionGraph ;
      dcterms:hasPart ?insertions ;
      dcterms:hasPart ?deletions .
    ?deletions a sh:SchemeDeltaDeletions ;
      sh:usingNamedGraph/sd:name ?deletionsGraph .
    ?insertions a sh:SchemeDeltaInsertions ;
      sh:usingNamedGraph/sd:name ?insertionsGraph .
  }
  # get deleted labels (in all languages) ...
  GRAPH ?deletionsGraph {
    ?oldConcept skos:prefLabel | skos:altLabel ?label .
    ?oldConcept ?oldLabelType ?label .
  }
  # ... which have been moved to another concept (or perhaps have got another labelType)
  GRAPH ?insertionsGraph {
    ?newConcept skos:prefLabel | skos:altLabel ?label .
    ?newConcept ?newLabelType ?label .
  }
  # restrict to a certain concept type and get additional information
  GRAPH ?oldVersionGraph {
    ?oldConcept skos:prefLabel | skos:altLabel ?label ;
      skos:prefLabel ?oldPrefLabel .
    # ugly fix for a different custom namespace URI used in STW 8.04
    BIND (uri(replace(str(?conceptType), "zbw-extensions", "skos-extensions")) AS ?obsoleteConceptType)
    {
      ?oldConcept a ?obsoleteConceptType 
    } UNION {
      ?oldConcept a ?conceptType
    }
  }
  GRAPH ?newVersionGraph {
    ?newConcept skos:prefLabel | skos:altLabel ?label .
    ?newConcept a ?conceptType .
    ?newConcept skos:prefLabel ?newPrefLabel .
  }
  OPTIONAL {
    GRAPH ?newVersionGraph {
      ?oldConcept owl:deprecated true .
      ?oldConcept owl:deprecated ?deprecated .
      BIND(if(?deprecated = true, str(true), '') as ?isDeprecated)
    }
  }
  FILTER (lang(?label) = ?language
    && lang(?newPrefLabel) = ?language
    && lang(?oldPrefLabel) = ?language)
}
ORDER BY ?oldPrefLabel ?label
