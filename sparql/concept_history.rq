PREFIX dcterms: <http://purl.org/dc/terms/>
PREFIX dsv: <http://purl.org/iso25964/DataSet/Versioning#>
PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
PREFIX sd: <http://www.w3.org/ns/sparql-service-description#>
PREFIX sh: <http://purl.org/skos-history/>
#
# history of a single concept
# (currently restricted to changes of skos:prefLabel/altLabel)
#
CONSTRUCT {
  ?concept sh:history ?conceptDelta .
  ?conceptDelta sh:prefLabelDeletion ?prefDelete ;
      sh:prefLabelInsertion ?prefInsert ;
      sh:altLabelDeletion ?altDelete ;
      sh:altLabelInsertion ?altInsert .
}
WHERE {
  GRAPH ?versionHistoryGraph {
    # parameters
    VALUES ( ?versionHistoryGraph ?concept ) {
      ( <http://zbw.eu/stw/version> <http://zbw.eu/stw/descriptor/12571-4> )
    }
    ?vhr a dsv:VersionHistoryRecord .
    ?vhr sh:hasDelta ?delta .
    ?delta dcterms:hasPart ?part .
    # identify insertions and deletions parts/graphs
    ?delta dcterms:hasPart ?insertions .
    ?insertions a sh:SchemeDeltaInsertions .
    ?insertions sh:usingNamedGraph/sd:name ?insertionsGraph .
    ?delta dcterms:hasPart ?deletions .
    ?deletions a sh:SchemeDeltaDeletions .
    ?deletions sh:usingNamedGraph/sd:name ?deletionsGraph .
  }
  # for each version, work on insertions and deletions part
  {
    GRAPH ?deletionsGraph {
      ?concept ?somePred [] .
      OPTIONAL {
        ?concept skos:prefLabel ?prefDelete
      } .
      OPTIONAL {
        ?concept skos:altLabel ?altDelete
      } .
    }
  } UNION {
    GRAPH ?insertionsGraph {
      ?concept ?somePred [] .
      OPTIONAL {
        ?concept skos:prefLabel ?prefInsert
      } .
      OPTIONAL {
        ?concept skos:altLabel ?altInsert
      } .
    }
  }
  # build a uri to group the changes for a particular version
  BIND (uri(concat(str(?concept), strafter(str(?delta), "/stw"))) AS ?conceptDelta)
}
