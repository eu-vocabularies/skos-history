PREFIX dc: <http://purl.org/dc/elements/1.1/>
PREFIX dcterms: <http://purl.org/dc/terms/>
PREFIX dsv: <http://purl.org/iso25964/DataSet/Versioning#>
PREFIX owl: <http://www.w3.org/2002/07/owl#>
PREFIX sd: <http://www.w3.org/ns/sparql-service-description#>
PREFIX sh: <http://purl.org/skos-history/>
PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
PREFIX xhv: <http://www.w3.org/1999/xhtml/vocab#>
PREFIX zbwext: <http://zbw.eu/namespaces/zbw-extensions/>
#
# Show the labels which have moved to newly inserted concepts
#
SELECT distinct ?oldConcept (str(?oldPrefLabel) as ?oldConceptLabel) (str(?label) AS ?movedLabel)
?newConcept (str(?newPrefLabel) as ?newConceptLabel) ?isSubconcept
WHERE {
  GRAPH ?versionHistoryGraph {
    # parameters
    VALUES ( ?versionHistoryGraph ?oldVersion ?newVersion ?language ) {
      ( <http://zbw.eu/stw/version> undef undef "en" )
    }
    # get the current and the previous version as default versions
    ?versionset dsv:currentVersionRecord/xhv:prev/dc:identifier ?previousVersion .
    ?versionset dsv:currentVersionRecord/dc:identifier ?latestVersion .
    # select the versions to actually use
    BIND(coalesce(?oldVersion, ?previousVersion) AS ?oldVersionSelected)
    BIND(coalesce(?newVersion, ?latestVersion) AS ?newVersionSelected)
    # get the delta and via that the relevant graphs
    ?delta a sh:SchemeDelta ;
      sh:deltaFrom/dc:identifier ?oldVersionSelected ;
      sh:deltaTo/dc:identifier ?newVersionSelected ;
      sh:deltaFrom/sh:usingNamedGraph/sd:name ?oldVersionGraph ;
      sh:deltaTo/sh:usingNamedGraph/sd:name ?newVersionGraph ;
      dcterms:hasPart ?insertions ;
      dcterms:hasPart ?deletions .
    ?insertions a sh:SchemeDeltaInsertions ;
      sh:usingNamedGraph/sd:name ?insertionsGraph .
    ?deletions a sh:SchemeDeltaDeletions ;
      sh:usingNamedGraph/sd:name ?deletionsGraph .
  }
  # get deleted labels (in all languages) ...
  GRAPH ?deletionsGraph {
    ?oldConcept skos:prefLabel | skos:altLabel ?label .
  }
  # ... which have been moved to another concept (or perhaps have got another labelType)
  GRAPH ?insertionsGraph {
    ?newConcept skos:prefLabel | skos:altLabel ?label .
  }
  # restrict to actual movements
  FILTER (?oldConcept != ?newConcept)
  #
  # restrict target concepts to newly inserted ones
  FILTER NOT EXISTS {
    GRAPH ?oldVersionGraph {
      ?newConcept ?p [] .
    }
  }
  GRAPH ?oldVersionGraph {
    ?oldConcept skos:prefLabel ?oldPrefLabel .
  }
  GRAPH ?newVersionGraph {
    ?newConcept skos:prefLabel ?newPrefLabel .
  }
  # flag if the new concept is directly sub-ordinated to the old one
  OPTIONAL {
    GRAPH ?newVersionGraph {
      BIND ('âœ“' AS ?isSubconcept)
      ?oldConcept skos:narrower ?newConcept
    }
  }
  FILTER (lang(?label) = ?language
    && lang(?oldPrefLabel) = ?language
    && lang(?newPrefLabel) = ?language )
}
ORDER BY ?newPrefLabel ?label
